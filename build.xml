<project xmlns:ivy="antlib:org.apache.ivy.ant" name="marklogic-kinesis-connector" basedir="." default="resolve">

    <property name="version">1.2.3</property>
    <property name="dir.src">src/main/java</property>
	<property name="dir.lib">lib</property>
    <property name="dir.build">build</property>
    <property name="dir.build.classes">${dir.build}/classes</property>
	<property name="dir.build.config">${dir.build}/config</property>
	<property name="jar.filename">marklogic-kinesis.jar</property>
	<property name="main.class">com.marklogic.kinesis.MarkLogicExecutor</property>
	<property name="dir.build.lib">${dir.build}/lib</property>
    <property name="dir.build.javadoc">${dir.build}/javadoc</property>
	<property name="ivy.install.version" value="2.1.0-rc2" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
	   <isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	 <target name="download-ivy" unless="offline">
	 	<!--
	        <mkdir dir="${ivy.jar.dir}"/>
	 	    <available file="${ivy.jar.file}" property="ivy.present"/>
	 	    	<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
	 	    		             dest="${ivy.jar.file}" usetimestamp="true"/> 
	 	    		          -->	
	    </target>

	    <target name="init-ivy" depends="download-ivy">
	        <path id="ivy.lib.path">
	            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
	        </path>
	        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	    </target>

	<target name="resolve" description="Use ivy to resolve classpaths">
		<ivy:retrieve />
	    </target>

    <path id="projectClasspath">
        <fileset dir="lib">
            <include name="**.jar"/>
        </fileset>
    </path>

    <target name="clean">
        <delete dir="${dir.build}"/>
    </target>

    <target name="init">
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.build.classes}"/>
    </target>
	
	<target name="copy-dependencies">
			<mkdir dir="${dir.build.lib}" />
		<!--
			<jar jarfile="${dir.build.lib}/dependencies-all.jar">
				<zipgroupfileset dir="${dir.lib}">
					<include name="java-client-api-*.jar" />
					<include name="amazon-kinesis-client-*.jar" />
					<include name="amazon-kinesis-connectors-*.jar" />
					<include name="aws-java-sdk-core-*.jar" />
					<include name="aws-java-sdk-cloudwatch-*.jar" />
					<include name="aws-java-sdk-kinesis-*.jar" />
					<include name="aws-java-sdk-dynamodb-*.jar" />
					<include name="commons-logging-*.jar" />
					<include name="log4j-*.jar" />
					<include name="slf4j-*.jar" />
					<include name="guava-*.jar" />
					<include name="jackson-*.jar" />
					<include name="httpclient-*.jar" />
					<include name="httpcore-*.jar" />
				<include name="*.jar" />
				</zipgroupfileset>
			</jar>
			-->
		<copy todir="${dir.build.lib}">
		    <fileset dir="lib"/>
		  </copy>
		
		</target>
	
	<target name="copy-propertiesfile">
			<mkdir dir="${dir.build.config}" />
		    <copy file="MarkLogicConnector.properties" todir="${dir.build.config}"/>
		    <copy file="log4j.properties" todir="${dir.build.config}"/>
	</target>

    <target name="compile" depends="init,clean,resolve">
        <echo>Compiling Java source</echo>
    	
    	<ivy:settings file="${ivy.home}/ivysettings.xml"/>
    	<ivy:cachepath pathid="main.classpath" conf="compile"/>

    	<mkdir dir="${dir.build.classes}"/>
        <javac classpathref="projectClasspath"
               srcdir="${dir.src}"
               destdir="${dir.build.classes}" />
    </target>

    <target name="jar" depends="compile,copy-dependencies,copy-propertiesfile">
    	
        <echo>Making JAR file ${dir.build}/${jar.filename}</echo>
    	
    	<manifestclasspath property="jar.classpath" jarfile="${dist.jar}">
    	      <classpath>
    	        <fileset dir="lib" includes="*.jar"/>
    	      </classpath>
    	</manifestclasspath>
    	
        <jar basedir="${dir.build.classes}" file="${dir.build}/${jar.filename}">
    	<manifest>
        	<attribute name="Main-Class" value="${main.class}"/>
        	<attribute name="Class-Path" value="config/ ${jar.classpath}"/>
    	</manifest>
        </jar>
    	
    </target>

    <target name="javadoc">
        <echo>Making JavaDoc from source</echo>
        <javadoc sourcepath="${dir.src}" destdir="${dir.build.javadoc}"></javadoc>
    </target>

</project>