<<<<<<< HEAD
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="marklogic-kinesis-connector" basedir="." default="build">

    <property name="version">1.2.3</property>
    <property name="dir.src">src/main/java</property>
	<property name="dir.lib">lib</property>
    <property name="dir.build">build</property>
    <property name="dir.build.classes">${dir.build}/classes</property>
=======
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="marklogic-kinesis-connector" basedir="." default="resolve">

    	<property name="version">1.2.3</property>
    	<property name="dir.src">src/main/java</property>
	<property name="dir.lib">lib</property>
    	<property name="dir.build">build</property>
    	<property name="dir.build.classes">${dir.build}/classes</property>
>>>>>>> c7ff54cc6aec1edeb85949dcb106226e3f5f81d4
	<property name="dir.build.config">${dir.build}/config</property>
	<property name="jar.filename">marklogic-kinesis.jar</property>
	<property name="main.class">com.marklogic.kinesis.MarkLogicExecutor</property>
	<property name="dir.build.lib">${dir.build}/lib</property>
<<<<<<< HEAD
    <property name="dir.build.javadoc">${dir.build}/javadoc</property>
=======
        <property name="dir.build.javadoc">${dir.build}/javadoc</property>
>>>>>>> c7ff54cc6aec1edeb85949dcb106226e3f5f81d4
	<property name="ivy.install.version" value="2.1.0-rc2" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
	   <isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
<<<<<<< HEAD
	
	<!-- PROPERTIES FOR TEST TASK SENDING DATA TO KINESIS STREAM. CHANGE AS NEEDED -->
	<property name="kinesis.stream.name" value="MyKinesisStreamName" />
	<property name="kinesis.stream.region" value="ap-southeast-2" /> <!-- AWS Regions are here: http://docs.aws.amazon.com/general/latest/gr/rande.html#ak_region -->
	<property name="kinesis.test.documents.type" value="XML" /> <!-- XML, JSON or TEXT -->
	<property name="kinesis.test.documents.number" value="10" /> <!-- Number of test data to send -->

	<target name="check-ivy">
	    <available file="${ivy.jar.file}" property="ivy.present"/>
	</target>
	
	 <target name="download-ivy" depends="check-ivy" unless="ivy.present">
	        <mkdir dir="${ivy.jar.dir}"/>
	 	    	<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
	 	    		             dest="${ivy.jar.file}" usetimestamp="true"/>  	
=======

	 <target name="download-ivy" unless="offline">
	        <mkdir dir="${ivy.jar.dir}"/>
	 	    <available file="${ivy.jar.file}" property="ivy.present"/>
	 	    	<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
	 	    		             dest="${ivy.jar.file}" usetimestamp="true"/> 
>>>>>>> c7ff54cc6aec1edeb85949dcb106226e3f5f81d4
	    </target>

	    <target name="setup" depends="download-ivy">
	        <path id="ivy.lib.path">
	            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
	        </path>
	        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	    </target>

	<target name="resolve" description="Use ivy to resolve classpaths">
		<ivy:retrieve />
	    </target>

    <path id="projectClasspath">
        <fileset dir="lib">
            <include name="**.jar"/>
        </fileset>
    </path>

    <target name="clean">
        <delete dir="${dir.build}"/>
<<<<<<< HEAD
    	<ivy:retrieve />
    </target>
	
	<target name="clean-all" depends="clean">
	   <ivy:cleancache/>
	</target>

    <target name="init" depends="clean,setup">
=======
    </target>

    <target name="init" depends="clean">
>>>>>>> c7ff54cc6aec1edeb85949dcb106226e3f5f81d4
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.build.classes}"/>
    </target>
	
<<<<<<< HEAD
	<target name="test-send" depends="">
		    <echo message="Sending test data to Kinesis stream"/>
		    <java classname="com.marklogic.kinesis.test.SendDataToKinesis" fork="yes">
		    	<classpath>
		    	    <pathelement location="${dir.build}/${jar.filename}"/>
		    	</classpath> 
		    	<arg value="${kinesis.stream.name}"/>
		    	<arg value="${kinesis.stream.region}"/>
		    	<arg value="${kinesis.test.documents.type}"/>
		    	<arg value="${kinesis.test.documents.number}"/>
		   </java>
	    </target>
	
	<target name="run" depends="copy-propertiesfile">
		    <echo message="Running connector"/>
		    <java classname="com.marklogic.kinesis.MarkLogicExecutor" fork="yes">
		    	<classpath>
		    	    <pathelement location="${dir.build}/${jar.filename}"/>
		    		<pathelement location="${dir.build.config}/MarkLogicConnector.properties"/>
		    		<pathelement location="${dir.build.config}/log4j.properties"/>
		    	</classpath> 
		   </java>
	    </target>
	
=======
>>>>>>> c7ff54cc6aec1edeb85949dcb106226e3f5f81d4
	<target name="copy-dependencies">
			<mkdir dir="${dir.build.lib}" />
		<!--
			<jar jarfile="${dir.build.lib}/dependencies-all.jar">
				<zipgroupfileset dir="${dir.lib}">
					<include name="java-client-api-*.jar" />
					<include name="amazon-kinesis-client-*.jar" />
					<include name="amazon-kinesis-connectors-*.jar" />
					<include name="aws-java-sdk-core-*.jar" />
					<include name="aws-java-sdk-cloudwatch-*.jar" />
					<include name="aws-java-sdk-kinesis-*.jar" />
					<include name="aws-java-sdk-dynamodb-*.jar" />
					<include name="commons-logging-*.jar" />
					<include name="log4j-*.jar" />
					<include name="slf4j-*.jar" />
					<include name="guava-*.jar" />
					<include name="jackson-*.jar" />
					<include name="httpclient-*.jar" />
					<include name="httpcore-*.jar" />
				<include name="*.jar" />
				</zipgroupfileset>
			</jar>
			-->
		<copy todir="${dir.build.lib}">
		    <fileset dir="lib"/>
		  </copy>
		
		</target>
	
	<target name="copy-propertiesfile">
			<mkdir dir="${dir.build.config}" />
		    <copy file="MarkLogicConnector.properties" todir="${dir.build.config}"/>
		    <copy file="log4j.properties" todir="${dir.build.config}"/>
	</target>

    <target name="compile" depends="init,clean,resolve">
        <echo>Compiling Java source</echo>
    	
    	<ivy:settings file="${ivy.home}/ivysettings.xml"/>
    	<ivy:cachepath pathid="main.classpath" conf="compile"/>

    	<mkdir dir="${dir.build.classes}"/>
        <javac classpathref="projectClasspath"
               srcdir="${dir.src}"
               destdir="${dir.build.classes}" />
    </target>

    <target name="jar" depends="compile,copy-dependencies,copy-propertiesfile">
    	
        <echo>Making JAR file ${dir.build}/${jar.filename}</echo>
    	
    	<manifestclasspath property="jar.classpath" jarfile="${dist.jar}">
    	      <classpath>
    	        <fileset dir="lib" includes="*.jar"/>
    	      </classpath>
    	</manifestclasspath>
    	
        <jar basedir="${dir.build.classes}" file="${dir.build}/${jar.filename}">
    	<manifest>
        	<attribute name="Main-Class" value="${main.class}"/>
        	<attribute name="Class-Path" value="config/ ${jar.classpath}"/>
    	</manifest>
        </jar>
<<<<<<< HEAD
    	<!-- Remove class files -->
    	<delete dir="${dir.build.classes}"/>
    	
    </target>
	
    <target name="build" depends="jar">
    	<!--<delete dir="${dir.build.classes}"/>-->
=======
         <!-- Remove class files -->
    	<delete dir="${dir.build.classes}"/>
    </target>
	
    <target name="build" depends="jar">
    	
>>>>>>> c7ff54cc6aec1edeb85949dcb106226e3f5f81d4
    </target>

    <target name="javadoc">
        <echo>Making JavaDoc from source</echo>
        <javadoc sourcepath="${dir.src}" destdir="${dir.build.javadoc}"></javadoc>
    </target>

<<<<<<< HEAD
</project>
=======
</project>
>>>>>>> c7ff54cc6aec1edeb85949dcb106226e3f5f81d4
